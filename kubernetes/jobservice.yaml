
apiVersion: v1
kind: Service
metadata:
  name: jobservice
spec:
  type: ClusterIP
  #clusterIP: 10.96.0.12
  selector:
    app: jobservice
  ports:
    - protocol: "TCP"
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jobservice-deployment
  labels:
    app: jobservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jobservice
  template:
    metadata:
      labels:
        app: jobservice
    spec:
      serviceAccountName: jobservice-svc-account
      containers:
      - name: jobservice
        image: eu.gcr.io/${PROJECT_ID}/jobservice:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: postgres-config
        volumeMounts:
          - mountPath: /mnt
            name: job-pvc
      volumes:
        - name: job-pvc
          persistentVolumeClaim:
            claimName: job-pvc
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jobservice-svc-account
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: executor
rules:
- apiGroups: ["", "batch"]
  resources: ["namespaces", "jobs", "pods", "pods/log"]
  verbs: ["get", "watch", "list", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: executor-binding
roleRef: # points to my Role
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: executor # name of role
subjects: # points to my ServiceAccount
- kind: ServiceAccount
  name: jobservice-svc-account # service account to bind to
  namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: job_service_db
  POSTGRES_USER: ${JOB_DB_USER}
  POSTGRES_PASSWORD: ${JOB_DB_PASS}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: default-storage-class
provisioner: kubernetes.io/gce-pd
volumeBindingMode: Immediate
allowVolumeExpansion: true
reclaimPolicy: Delete
parameters:
  type: pd-standard
  fstype: ext4
  replication-type: none
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: solve-it-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: standard-rwo
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: job-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: standard-rwo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres  # Sets Deployment name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:10.1 # Sets Image
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432  # Exposes container port
          envFrom:
          - configMapRef:
              name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb-vol
              subPath: postgres
      volumes:
        - name: postgredb-vol
          persistentVolumeClaim:
            claimName: solve-it-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres # Sets service name
  labels:
    app: postgres # Labels and Selectors
spec:
  #clusterIP: 10.96.0.11
  ports:
    - port: 5432 # Sets port to run the postgres application
  selector:
    app: postgres