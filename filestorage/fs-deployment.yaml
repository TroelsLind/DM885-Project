#The data storage (and access)
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: fs-pv-volume
provisioner: pd.csi.storage.gke.io
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
parameters:
  type: pd-balanced
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fs-pv-claim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: fs-pv-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fs-service  # Sets Deployment name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fs-service
  template:
    metadata:
      labels:
        app: fs-service
    spec:
      containers:
        - name: fs-service
          image: eu.gcr.io/${PROJECT_ID}/fs_service@sha256:454c5ebae086384c37e8e3ccd74cbff92c7a8da47cf47e2617dc61dae9ad3c9d # Sets Image
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 9090  # Exposes container port
          envFrom:
            - configMapRef:
                name: fs-postgres-config
          volumeMounts:
            - mountPath: /mnt/hdd
              subPath: dumbaf #Fix some bug
              name: fsservicevol
      volumes:
        - name: fsservicevol
          persistentVolumeClaim:
            claimName: fs-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: fs-service # Sets service name
  labels:
    app: fs-service # Labels and Selectors
spec:
  type: ClusterIP # Sets service type
  ports:
    - port: 9090 # Sets port to run the postgres application
  selector:
    app: fs-service
